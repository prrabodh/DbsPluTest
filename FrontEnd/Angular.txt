Angular

set1

1. 
How would you change the name of a source language file that an extraction tool generates?
 
 	 	 	ng extract-i18n --out-file newFile.json
2. 
Which is the correct way to test the built-in pipe that capitalizes the first letter of every word in a string?
 
 	 	 	class TitleCasePipe implements PipeTransform {
 transform(input: string): string {
  ...
 }
}
3. 
How can you allow a nested child component to update its parent component with data?
 
 	 	 	Use the @Output() decorator in the child component.
4. 
What is the difference between a route guard and a wildcard route?
 
 	 	 	The route guard prevents unauthorized access to restricted parts of your application, whereas the wildcard route handles invalid URLs.
5. 
What is wrong with the following code?

onmessage = function(e) {
  const replyMsg ='Replay: ' + (data[0] * data[1]);
  console.log('Replaying to the main thread');
  postMessage(replyMsg);
}
 
 	 	 	It uses data[0] and data[1] without the event e.
6. 
Given the following code, what change would you make to log when the notifications from the observable finish?

someObservable.subscribe({
 next(item) { console.log(item); },
 error(err) { console.log(err); }
});
 
 	 	 	Add the complete() handler function.
7. 
A child component must implement two-way binding. What must you add to the child component to use two-way binding?
 
 	 	 	The @Input and @Output decorators
8. 
How can you prevent users from visiting pages of your applications that they are not authorized to view?
 
 	 	 	Use a route guard.
9. 
Which built-in Angular directive allows you to repeat a node for each item in a list?
 
 	 	 	NgFor
10. 
Which directive would you use to iterate over each form control with a form array?
 
 	 	 	*ngFor
11. 
An Angular application shows a form that a user will fill out. The form contains a user's name, address, bio, and contact info. Some users submitted the form without filling in their bios. What might be the problem?
 
 	 	 	The code is missing Validators.required.
12. 
What does the @Input decorator do in a child component?
 
 	 	 	Indicates that a property can receive its value from a parent component.
13. 
What method would you use to fetch data from a server?
 
 	 	 	get()
14. 
What is the easiest way to format currency for the correct locale?
 
 	 	 	Use the CurrencyPipe.
15. 
How can you navigate between the views of your Angular application?
 
 	 	 	Through routing
16. 
What does routing do?
 
 	 	 	Allows you to navigate between your application's component views
17. 
What is a component in Angular?
 
 	 	 	The main building block for Angular applications.
18. 
What is a nested component?
 
 	 	 	A child component whose tag is included in a parent component's template.
19. 
Why would you use form input validation?
 
 	 	 	To check the accuracy and completeness of the user's input
20. 
What is a service in Angular?
 
 	 	 	A reusable class that provides the logic to the components in your application.
21. 
What is the difference between a service and a component?
 
 	 	 	A service provides the logic for the components and the components can share that logic, whereas a component provides the application's user interface.


Set2

1. 
What is a reason to use service workers in a web application?
 
 	 	 	To allow an application to access push notifications
2. 
Which is the correct way to test the built-in pipe that capitalizes the first letter of every word in a string?
 
 	 	 	class TitleCasePipe implements PipeTransform {
 transform(input: string): string {
  ...
 }
}
3. 
You are creating an Angular application where you must manually set the runtime locale. What would you add to the following code so the runtime value is ar-SA?

import { LOCALE_ID, NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { ImageComp } from '../src/app/image.component';


@NgModule({
  imports: [ BrowserModule ],
  declarations: [ ImageComp ],
  providers: [{provide: LOCALE_ID}],
  ...
})

export class AnalyzePictorial {... }
 
 	 	 	useValue: 'ar-SA' in the providers
4. 
In Angular, how would you explicitly define a transition state in an animation?
 
 	 	 	Use the state() function.
5. 
You are learning how to use data binding in an Angular application. To check how much you learned, you identify the @Input and @Output decorators from the following code snippet:

<app-input-output
 [item]="currentItem" (deleteRequest)="crossOffItem($event)">
</app-input-output>

You think they are:

Input decorator: deleteRequest and event
Output decorator: item

 

You get the wrong results because the input and output decorators are wrong. What should they be?
 
 	 	 	Input decorator: item
Output decorator: deleteRequest
6. 
You built an application using Angular that sees many regular users. Users on mobile devices complain that the app is slow. How can you improve your application's performance on mobile devices?
 
 	 	 	Use server-side rendering.
7. 
Your Angular application grabs a list of data from a remote server. What is the easiest way to display this data in a list inside your app?
 
 	 	 	Use the built-in NgFor directive.
8. 
Your Angular application will display an icon component if the user is logged in. You are using the NgFor directive to display the icon. Why is this not working correctly?
 
 	 	 	You must use the NgIf directive.
9. 
Why do you use event binding in your code?
 
 	 	 	To listen and respond to a user's actions
10. 
What must you do to access the values that an observable publishes?
 
 	 	 	Subscribe to the observable.
11. 
Which built-in Angular directive allows you to repeat a node for each item in a list?
 
 	 	 	NgFor
12. 
What does the @Input decorator do in a child component?
 
 	 	 	Indicates that a property can receive its value from a parent component.
13. 
An Angular application shows a form that a user will fill out. The form contains a user's name, address, bio, and contact info. Some users submitted the form without filling in their bios. What might be the problem?
 
 	 	 	The code is missing Validators.required.
14. 
What is a component in Angular?
 
 	 	 	The main building block for Angular applications.
15. 
What is true about two-way binding?
 
 	 	 	Two-way binding allows you to listen for events and update values between components.
16. 
What is a service in Angular?
 
 	 	 	A reusable class that provides the logic to the components in your application.
17. 
What is the easiest way to format currency for the correct locale?
 
 	 	 	Use the CurrencyPipe.
18. 
Why would you use two-way binding in your code?
 
 	 	 	To update a value between parent and child components at the same time
19. 
Why would you use form input validation?
 
 	 	 	To check the accuracy and completeness of the user's input
20. 
What method would you use to fetch data from a server?
 
 	 	 	get()

Set3

1. 
How does sequential animation differ from parallel animation?
 
 	 	 	In sequential animation, the animations run one after the other, whereas in parallel animation, the animations all run at the same time.
2. 
You are learning how to use data binding in an Angular application. To check how much you learned, you identify the @Input and @Output decorators from the following code snippet:

<app-input-output
 [item]="currentItem" (deleteRequest)="crossOffItem($event)">
</app-input-output>

You think they are:

Input decorator: deleteRequest and event
Output decorator: item

 

You get the wrong results because the input and output decorators are wrong. What should they be?
 
 	 	 	Input decorator: item
Output decorator: deleteRequest
3. 
What does open => * do?
 
 	 	 	Changes an open state to any other state
4. 
You construct a class without a constructor parameter, forming a compilation error. How would you resolve the error?
 
 	 	 	By adding an explicit constructor to the class that reports the error
5. 
What is the difference between a template reference variable and text interpolation?
 
 	 	 	A template reference variable lets you reference a DOM element or component, whereas text interpolation lets you embed expressions in your HTML templates.
6. 
What can you use to bootstrap an Angular 15 application without any help from NgModule?
 
 	 	 	The bootstrapApplication API
7. 
What benefit does server-side rendering provide?
 
 	 	 	It makes static files searchable and provides better search engine optimization (SEO) results.
8. 
You write the following code in your application to request data from a server:

getDetail() {
 return this.http.get<Detail>(this.detailUrl);
}

Instead of receiving full detailed data, you only get a JSON part. How can you fix this?
 
 	 	 	getDetailResponse(): Observable<HttpResponse<Detail>> {
 return this.http.get<Detail>(
  this.detailUrl, { observe: 'response' });
}
9. 
In the following code snippet, the OrderService depends on the LogService. What else must you do to make the LogService available to the OrderService?

import { Injectable } from '@angular/core';
import { Logging } from '../log.service';

@Injectable({
 providedIn: 'root',
})

export class OrderService {
 constructor() { }
}
 
 	 	 	Inject the Logging service into the OrderService's constructor.
10. 
In Angular 15, what makes the reactive forms type-safe?
 
 	 	 	Strictly typed form
11. 
What does the following code snippet do?

import { AllItems } from './all-items';

export class CollectionOfItems extends AllItems<string> {
 override controlType = 'dropdown';
}
 
 	 	 	Presents a list of items in a select box
12. 
Why would you use form input validation?
 
 	 	 	To check the accuracy and completeness of the user's input
13. 
What does two-way binding do?
 
 	 	 	Allows components to share data
14. 
How can you navigate between the views of your Angular application?
 
 	 	 	Through routing
15. 
Why would you implement a strictly typed form in your Angular application?
 
 	 	 	To make the reactive forms fully type-safe
16. 
What is the easiest way to format currency for the correct locale?
 
 	 	 	Use the CurrencyPipe.
17. 
What is the difference between a route guard and a wildcard route?
 
 	 	 	The route guard prevents unauthorized access to restricted parts of your application, whereas the wildcard route handles invalid URLs.
18. 
What is true about two-way binding?
 
 	 	 	Two-way binding allows you to listen for events and update values between components.
19. 
Why do you use event binding in your code?
 
 	 	 	To listen and respond to a user's actions
20. 
How can you prevent users from visiting pages of your applications that they are not authorized to view?
 
 	 	 	Use a route guard.

set4

1. 
What is a reason to use service workers in a web application?
 
 	 	 	To allow an application to access push notifications
2. 
An Angular site uses routing. How would you set up a 404 page?
 
 	 	 	Create a wildcard route to the component that you want to display for your 404 page.
3. 
You must create a reference to the following div element in your application. What format would you use to add a template reference variable named title to the div?

 <div id="title-div">Title</div>
 
 	 	 	#title
4. 
Using the following code snippet, how would you ensure that your application displays the HomeComponent when it starts?

const routes: Routes = [
 { path: 'main-component', component: MainComponent },
 { path: 'home-component', component: HomeComponent },
 { path: '**', component: PageNotFoundComponent },
];
 
 	 	 	Create a redirect route to the HomeComponent before the wildcard route.
5. 
Which is an example of a built-in Angular structural directive?
 
 	 	 	NgIf
6. 
Which class helps you track the value and validation status of an individual control on a form?
 
 	 	 	FormControl
7. 
Why would you implement a strictly typed form in your Angular application?
 
 	 	 	To make the reactive forms fully type-safe
8. 
You build an Angular application with a form that a user must fill out before saving data. When a user attempts to save data after completing the form, however, the save button appears to be disabled. Why?
 
 	 	 	The form is not in a valid state.
9. 
What is the difference between the NgStyle and NgFor directives?
 
 	 	 	The NgStyle directive adds and removes HTML styles, whereas the NgFor directive displays a node for each item in a list.
10. 
What does the @Input decorator do in a child component?
 
 	 	 	Indicates that a property can receive its value from a parent component.
11. 
What is a service in Angular?
 
 	 	 	A reusable class that provides the logic to the components in your application.
12. 
You are creating a new component in your Angular application. What is the first thing you must do to use the component decorator?
 
 	 	 	Import Component from '@angular/core'.
13. 
An Angular application shows a form that a user will fill out. The form contains a user's name, address, bio, and contact info. Some users submitted the form without filling in their bios. What might be the problem?
 
 	 	 	The code is missing Validators.required.
14. 
What is a component in Angular?
 
 	 	 	The main building block for Angular applications.
15. 
Why do you use event binding in your code?
 
 	 	 	To listen and respond to a user's actions
16. 
What does two-way binding do?
 
 	 	 	Allows components to share data
17. 
Why would you use two-way binding in your code?
 
 	 	 	To update a value between parent and child components at the same time
18. 
What is true about two-way binding?
 
 	 	 	Two-way binding allows you to listen for events and update values between components.
19. 
How can you prevent users from visiting pages of your applications that they are not authorized to view?
 
 	 	 	Use a route guard.
20. 
What method would you use to fetch data from a server?
 
 	 	 	get()

set5

1. 
What happens in a * => void transition?
 
 	 	 	An element leaves a view regardless of its state.
2. 
What is the main advantage of using web workers in a web application?
 
 	 	 	They decrease the processing time of the main execution thread.
3. 
How can you get access to use reactive form controls in your code?
 
 	 	 	Through ReactiveFormsModule
4. 
You are creating an Angular application that must show an image. What is the correct way to add the src property of the image to the img element?
 
 	 	 	Use property binding, []

<img alt=" " [src]=" ">
5. 
What does the @Input decorator do in a child component?
 
 	 	 	Indicates that a property can receive its value from a parent component.
6. 
What must you do to access the values that an observable publishes?
 
 	 	 	Subscribe to the observable.
7. 
What does a pipe do in Angular?
 
 	 	 	Accepts an input value, transforms it, and returns this transformed value.
8. 
Which property allows you to define an HTML template in a separate file from your component?
 
 	 	 	templateUrl
9. 
You build an Angular application with a form that a user must fill out before saving data. When a user attempts to save data after completing the form, however, the save button appears to be disabled. Why?
 
 	 	 	The form is not in a valid state.
10. 
You create a service in your application that all components must access. Where do you add the service so that all components receive the same instance of the service?
 
 	 	 	Add the service in the providers property of the root module.
11. 
Which handler function is required when you subscribe to an observable?
 
 	 	 	next()
12. 
You write the following code to update a resource on a server using a PUT HTTP request. When you run the code, the resource does not change on the server. Why?

//data.service.ts
updateData(data: Data): Observable<Data> {
 return this.http.put<Data>(this.datasUrl, data, httpOptions)
 .pipe(catchError(this.handleError('updateData', data)));
}

----------------------------------------------------------------------

//data.components.ts
this.dataService.updateData(modifyData);
 
 	 	 	You did not subscribe to an observable that the put() method returned.
13. 
What is the benefit of using the ActivatedRoute interface?
 
 	 	 	You can pass information between components.
14. 
Why would you use standalone components in your Angular 15 applications?
 
 	 	 	To reduce the usage of NgModule
15. 
How would you apply two-way binding to the size property in the following code?

 <list-item size="listFont"></list-item>
 
 	 	 	[(size)]
16. 
What would you change so the button click works correctly in the following code snippet?

<button {click}="orderItems()">Order</button>
 
 	 	 	Wrap the click event in parentheses instead of curly brackets.
17. 
Your Angular application grabs a list of data from a remote server. What is the easiest way to display this data in a list inside your app?
 
 	 	 	Use the built-in NgFor directive.
18. 
Your application has a UserDashboard component. The UserDashboard component has a child component based on the parent component's color. How can you pass this color to the child component?
 
 	 	 	Use the @Input() decorator in the child component.
19. 
Multiple components must access data from a remote server. What is the best way to allow all the components to access this remote data?
 
 	 	 	Return the data in an injectable service that all the components can use.
20. 
Your Angular application will display an icon component if the user is logged in. You are using the NgFor directive to display the icon. Why is this not working correctly?
 
 	 	 	You must use the NgIf directive.

set6

1. 
What happens in a * => void transition?
 
 	 	 	An element leaves a view regardless of its state.
2. 
You are writing code for your Angular application using TestBed.inject(). Before you start to write more of the code, you must inject it inside a beforeEach() method. Why?
 
 	 	 	To make the service part of your setup
3. 
In Angular, the locale data is set for the en-US United States by default. How can you change this to French?
 
 	 	 	@NgModule({
 providers: [ { provide: LOCALE_ID, useValue: 'fr' } ]
})
4. 
You use the following code snippet to test the component Document Object Model (DOM). What is wrong with the code snippet?

it('should have <f> with "physical capability!" ', () => {
 const physicalElement: HTMLElement = fixture.nativeElement;
 const f = physicalElement('f')!;
 expect(f.textContent).toEqual('physical capability!');
});
 
 	 	 	The querySelector() method is missing.
5. 
How would you apply two-way binding in your code?
 
 	 	 	By combining property binding and event binding
6. 
You are creating an Angular application where you must manually set the runtime locale. What would you add to the following code so the runtime value is ar-SA?

import { LOCALE_ID, NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { ImageComp } from '../src/app/image.component';


@NgModule({
  imports: [ BrowserModule ],
  declarations: [ ImageComp ],
  providers: [{provide: LOCALE_ID}],
  ...
})

export class AnalyzePictorial {... }
 
 	 	 	useValue: 'ar-SA' in the providers
7. 
While creating an animation, you implement the stagger() function inside the query() call. Why?
 
 	 	 	To add a timing gap after each queried item's animation
8. 
How would you create an animation using the transition() function without implementing void=>* and *=>void?
 
 	 	 	transition ( ':enter', [...] );
transition ( ':leave', [...] );
9. 
You are using an observable to emit some messages to indicate that some files are being transferred. Once the file transfers finish, what handler should you use for the observable notification?
 
 	 	 	complete()
10. 
When using a delete operation, why does the subscribe() method work without a callback?
 
 	 	 	Because the delete operation does not generate any result.
11. 
You visit a route that uses the CanDeactivate route guard. You try to navigate away from the route. What happens?
 
 	 	 	You are not allowed to unless the route guard returns true.
12. 
How does the NonNullableFormBuilder class work in an Angular 15 application?
 
 	 	 	It automatically constructs non-nullable FormControl elements.
13. 
What would you import to create a new environment injector for your application that can also perform initialization logic?
 
 	 	 	import { createEnvironmentInjector, ENVIRONMENT_INITIALIZER } from '@angular/core';
14. 
What benefit does server-side rendering provide?
 
 	 	 	It makes static files searchable and provides better search engine optimization (SEO) results.
15. 
While creating an Angular application, you want to keep the date format according to the locale rules. Which built-in pipe would help you achieve the result?
 
 	 	 	DatePipe
16. 
You create a service using the following code snippet. Lazy-loaded modules receive different instances of the service. What can you change to make these modules share the same instance of the service?

import { Injectable } from '@angular/core';

@Injectable({
 providedIn: 'any',
})

export class SomeService {
 ...
}
 
 	 	 	Change the providedIn option from 'any' to 'root'.
17. 
You are learning how to use data binding in an Angular application. To check how much you learned, you identify the @Input and @Output decorators from the following code snippet:

<app-input-output
 [item]="currentItem" (deleteRequest)="crossOffItem($event)">
</app-input-output>

You think they are:

Input decorator: deleteRequest and event
Output decorator: item

 

You get the wrong results because the input and output decorators are wrong. What should they be?
 
 	 	 	Input decorator: item
Output decorator: deleteRequest
18. 
To get the final result in the form of non-JSON data from the server, what would you implement in the HttpClient.get() method?
 
 	 	 	return this.http.get(filename, {responseType : 'text'})
19. 
An ItemSelection component must update a parent component with the selection a user makes. How would you enable this?
 
 	 	 	Use the @Output() decorator in the ItemSelection component.
20. 
How would you generate a warning message when a translation is missing from an application?
 
 	 	 	"options": {
 "i18nMissingTranslation": "warning"
}



set7

1. 
How does sequential animation differ from parallel animation?
 
 	 	 	In sequential animation, the animations run one after the other, whereas in parallel animation, the animations all run at the same time.
2. 
What is the format for using @keyframes in an Angular 15 application?
 
 	 	 	@keyframes host-my-cmp_main {...}
3. 
When is the best time to work with a wildcard state?
 
 	 	 	When there is more than one state to choose from
4. 
How would you enable different functions such as a trigger, state, and transition in your Angular application?
 
 	 	 	By importing them from @angular/animation
5. 
You are building an Angular application with two components. One component uses the value "hedgehog" (child component) and the other component has a different value, "dog" (parent component). To continue working on the application, you must use the parent component's value instead of the child component. How would you do this?
 
 	 	 	constructor(@SkipSelf() public ... )
6. 
A component's injector lacks a provider for handling a request. What happens?
 
 	 	 	The request passes to the component's parent ElementInjector.
7. 
What is true about using ViewEncapsulation.None in the component decorator?
 
 	 	 	It globally applies component styles.
8. 
How would you create a top-level FormGroup instance that can bind an instance to a form to track the form's validation status?
 
 	 	 	<form #first="ngForm" (ngSubmit)="onSubmit(first)" novalidate>
9. 
You work at an IT company where you must write code for a template-driven form. After a while, the customer requests that you add an asynchronous validator to the form. How can you apply it?
 
 	 	 	Add NG_ASYNC_VALIDATORS into a new directive.
10. 
You remove an element's view from a Document Object Model (DOM) but it does not enter a :leave transition. Why?
 
 	 	 	Because its parent is removed from the DOM.
11. 
How can you include locale data in your Angular application?
 
 	 	 	ng build --localize
12. 
What is wrong with the following code snippet?

const uniqueDetailControl = new FormControl('', {
 asyncValidators: [this.uniqueDetailValidator.validate]
});

constructor(private uniqueDetailValidator: EnterUniqueDetailValidator)
 
 	 	 	The bind() function is missing from the asyncValidators.
13. 
Where would you search for a language's Unicode locale ID so you can manually set the runtime locale?
 
 	 	 	In the @angular/common/locales/ directory
14. 
What does the following code do?

animations: [
 ... 
 transition(':enter', [
  style({ width: 10, transform: 'translateX(50px)', opacity: 0 }),
    group([
      ...
    ])
 ]),
 transition(':leave', [
    group([
      ...
    ])
 ])
])]
 
 	 	 	Implements two independent animations in an element in parallel
15. 
In which injector does the providers property on @Directive() serve as a configuration parameter?
 
 	 	 	ElementInjector
16. 
You are creating an Angular application that needs an animation. If a user enters data, the animation should fly onto the page from the left. When the user removes the data, the animation should fly out to the right. How would you implement this logic in your code?
 
 	 	 	animations: [
 trigger('flyInOut', [
   state('in', style({ transform: 'translateX(0)' })),
   transition('void => *', [
     style({ transform: 'translateX(-100%)' }), animate(100)
   ]),
   transition('* => void', [
     animate(100, style({ transform: 'translateX(100%)' }))
])])]
17. 
Why do you implement an export before a variable that defines an animation() function?
 
 	 	 	To make the variable a reusable animation function
18. 
In Angular, the locale data is set for the en-US United States by default. How can you change this to French?
 
 	 	 	@NgModule({
 providers: [ { provide: LOCALE_ID, useValue: 'fr' } ]
})
19. 
You create a SharedWorker object using the SharedWorker() constructor. How would you start this web worker if it has an onmessage event attached to it?
 
 	 	 	SharedWorker.port.start();
20. 
How can you create dynamic forms where you can add or remove controls at runtime?
 
 	 	 	By implementing the FormArray class

set8

1. 
What is wrong with the following template-driven form's code that uses a custom validation?

@Directive({
 selector: '[appInvalidName]',
 providers: [{provide: NG_CUSTOM_VALIDATORS, useExisting: 
   InvalidValidatorDirective, multi: true}]
})
 
 	 	 	It should use NG_VALIDATORS instead of NG_CUSTOM_VALIDATORS.
2. 
Which approaches do reactive forms use for managing the state of a form?
 
 	 	 	Explicit and immutable
3. 
When is the best time to work with a wildcard state?
 
 	 	 	When there is more than one state to choose from
4. 
How would you set an element property to a component property value?
 
 	 	 	Use [].
5. 
Which attribute would you use to activate the NgOptimizedImage directive in your application?
 
 	 	 	ngSrc
6. 
In Angular, the locale data is set for the en-US United States by default. How can you change this to French?
 
 	 	 	@NgModule({
 providers: [ { provide: LOCALE_ID, useValue: 'fr' } ]
})
7. 
How can you include locale data in your Angular application?
 
 	 	 	ng build --localize
8. 
You remove an element's view from a Document Object Model (DOM) but it does not enter a :leave transition. Why?
 
 	 	 	Because its parent is removed from the DOM.
9. 
You work at an IT company where you must write code for a template-driven form. After a while, the customer requests that you add an asynchronous validator to the form. How can you apply it?
 
 	 	 	Add NG_ASYNC_VALIDATORS into a new directive.
10. 
You are creating an Angular application that needs an animation. If a user enters data, the animation should fly onto the page from the left. When the user removes the data, the animation should fly out to the right. How would you implement this logic in your code?
 
 	 	 	animations: [
 trigger('flyInOut', [
   state('in', style({ transform: 'translateX(0)' })),
   transition('void => *', [
     style({ transform: 'translateX(-100%)' }), animate(100)
   ]),
   transition('* => void', [
     animate(100, style({ transform: 'translateX(100%)' }))
])])]
11. 
Each page that is routed to your application should have a title. Angular uses this title for browser history. How would you add the title?
 
 	 	 	Add the title property to the route config.
12. 
How can a component get an id parameter from the ActivatedRoute.paramMap observable?
 
 	 	 	ngOnInit(): void {
 this.route.paramMap.subscribe(pmap => this.getInfo(pmap.get('id')));
}
13. 
What would make the FormControl value null in an application?
 
 	 	 	Calling reset()
14. 
A class called ProfileDetails uses FormGroup to store usernames that users provide through a form. Later, you must update the name of a user. How would you do this?
 
 	 	 	this.profileForm.patchValue({
 enterName: 'Xian'
})
15. 
Your application has a UserArea component that only logged-in users can access. This component has child routes that are only accessible through the user area. How can you prevent users who are not logged in from accessing these child routes?
 
 	 	 	Use the CanActivateChild route guard.
16. 
A button in your Angular application requires a style that changes its color from white to red to black in five seconds. How would you implement this in your code?
 
 	 	 	transition('* => active', [
  animate('5s', keyframes([
    style({ backgroundColor: 'white' }),
    style({ backgroundColor: 'red' }),
    style({ backgroundColor: 'black' })
]))
17. 
You configure your Angular application to use server-side rendering. You want to prerender all the pages of your app to static HTML. How would you do this?
 
 	 	 	Run the npm run prerender command.
18. 
You are using an observable to emit some messages to indicate that some files are being transferred. Once the file transfers finish, what handler should you use for the observable notification?
 
 	 	 	complete()
19. 
Why would you use the setValue() method in code?
 
 	 	 	To update the values of a form control
20. 
How would you apply two-way binding in your code?
 
 	 	 	By combining property binding and event binding




set9

1. 
In Angular, the locale data is set for the en-US United States by default. How can you change this to French?
 
 	 	 	@NgModule({
 providers: [ { provide: LOCALE_ID, useValue: 'fr' } ]
})
VM157:43 2. 
What does the following code do?

animations: [
 ... 
 transition(':enter', [
  style({ width: 10, transform: 'translateX(50px)', opacity: 0 }),
    group([
      ...
    ])
 ]),
 transition(':leave', [
    group([
      ...
    ])
 ])
])]
 
 	 	 	Implements two independent animations in an element in parallel
VM157:43 3. 
What would you do if you instantiate a FormControl that uses asynchronous validation?
 
 	 	 	Pass the async validator as the third argument.
VM157:43 4. 
What is the format for using @keyframes in an Angular 15 application?
 
 	 	 	@keyframes host-my-cmp_main {...}
VM157:43 5. 
Using the following code snippet, each component that accesses the service is lazy loaded. What must you change to ensure that each component gets a separate instance of the service?

import { Injectable } from '@angular/core';

@Injectable({
 providedIn: 'root',
})

export class ThisService {
 ...
}
 
 	 	 	Change the providedIn property from 'root' to 'all'.
VM157:43 6. 
While working on code, you need a script file inside a worker's scope. How can you add the required file to your code?
 
 	 	 	importScripts('fileName.js');
VM157:43 7. 
A component's injector lacks a provider for handling a request. What happens?
 
 	 	 	The request passes to the component's parent ElementInjector.
VM157:43 8. 
You are writing code for your Angular application using TestBed.inject(). Before you start to write more of the code, you must inject it inside a beforeEach() method. Why?
 
 	 	 	To make the service part of your setup
VM157:43 9. 
How does Angular respond when a form control value changes in template-driven forms?
 
 	 	 	It returns a VALID status or generates a list of validation errors.
VM157:43 10. 
The following code snippet is the route configuration that you set up in your application:

const routes: Routes = [
 { path: '**', component: NoPageComponent },
 { path: 'home-component', component: HomeComponent },
 { path: 'user-component', component: UserComponent },
 { path: '',  redirectTo: '/home-component', pathMatch: 'full' },
];

When your app launches, it only displays the NoPageComponent. Using the code snippet above, what would you change to make the app display the HomeComponent when it starts?
 
 	 	 	Move the NoPageComponent to the bottom of the routes.
VM157:43 11. 
How can you create dynamic forms where you can add or remove controls at runtime?
 
 	 	 	By implementing the FormArray class
VM157:43 12. 
By default, reactive forms are strictly typed forms. For an application, you must implement an untyped reactive form, however. How would you do so?
 
 	 	 	Apply Untyped before any of the form models.
VM157:43 13. 
Which approaches do reactive forms use for managing the state of a form?
 
 	 	 	Explicit and immutable
VM157:43 14. 
Why would you use a getter in a dynamic form?
 
 	 	 	To provide access to the aliases in a form array
VM157:43 15. 
The following code displays a setup function for testing a service in your project. The code is incomplete. How can you improve it?

function setup() {
 const enterSpy = jasmine.createSpyObj('PreciousService', ['getValue']);
 const enterAmount = 'enter amount';
 const mainService = new MainService(enterSpy);
 enterSpy.getValue.and.returnValue(enterAmount);
 return { mainService, enterSpy };
}
 
 	 	 	Add the missing enterAmount variable in the return statement.
VM157:43 16. 
How can you include locale data in your Angular application?
 
 	 	 	ng build --localize
VM157:43 17. 
You are building an Angular application with two components. One component uses the value "hedgehog" (child component) and the other component has a different value, "dog" (parent component). To continue working on the application, you must use the parent component's value instead of the child component. How would you do this?
 
 	 	 	constructor(@SkipSelf() public ... )
VM157:43 18. 
You are working on an application that requires you to use @angular/localize/tools. While working, you implement the canParse method in the code, but you receive an error. Why?
 
 	 	 	The canParse method is deprecated from the @angular/localize/tools.
VM157:43 19. 
You have two components, ProductionComponent and FoodComponent. How would you directly import the FoodComponent into the ProductionComponent without using NgModule?
 
 	 	 	Mark both the components as standalone:true.
VM157:43 20. 
What is wrong with the following code snippet?

const uniqueDetailControl = new FormControl('', {
 asyncValidators: [this.uniqueDetailValidator.validate]
});

constructor(private uniqueDetailValidator: EnterUniqueDetailValidator)
 
 	 	 	The bind() function is missing from the asyncValidators.





